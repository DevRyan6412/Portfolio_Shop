spring.application.name=shop

#SecretLoadDirectory ->application_secret.properties 로드설정
spring.config.import=optional:file:src/main/resources/application_secret.properties

logging.level.org.springframework.boot.context.config=DEBUG

# 서버 설정
server.port=8081

# 데이터베이스 설정
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/shop?serverTimezone=UTC
spring.datasource.username=shopuser
spring.datasource.password=1111

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MariaDB106Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

# 로깅 설정
logging.level.org.hibernate.type.descriptor.sql=trace

# 개발 도구 설정
spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false

# 파일 업로드 설정
spring.servlet.multipart.maxFileSize=20MB
spring.servlet.multipart.maxRequestSize=100MB
itemImgLocation=C:/shop/item
uploadPath=file:///C:/shop/

#소셜 로그인 ===============================================================================================================================
#순환참조 허용
spring.main.allow-circular-references=true

# Google OAuth2 설정
spring.security.oauth2.client.registration.google.client-id=193502369459-gh83shv2tgdna5qk41ehab9q04ko7g28.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email

# Kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=f38edd978070373963fad959d4cf97cf
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8081/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=post

# Kakao Provider 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=jSPgjz11ckmPIkQN9XaS
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8081/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=nickname,name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

# Naver Provider 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
#소셜 로그인 ===============================================================================================================================
